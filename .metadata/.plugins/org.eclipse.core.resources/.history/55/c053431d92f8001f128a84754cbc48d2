<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>JavaScript Book System</title>
</head>
<body>
<h1>Authors available</h1>
<ul id="authorList"></ul>
 
    <label for="authorId">Enter author id:</label>
<input type="number" id="authorId">
<button onclick="fetchAuthorById()">Search book</button>
 
    <h2>Author details:</h2>
<p id="authorDetails"></p>
 
    <h2>Add a new author</h2>
<label for="newAuthorId">Author id:</label>
<input type="number" id="newAuthorId"><br>
<label for="newAuthorName">Name:</label>
<input type="text" id="newAuthorName"><br>
<label for="newAuthorCountry">Country:</label>
<input type="text" id="newAuthorCountry"><br>
<button onclick="submitAuthors()">Submit</button>
 
    <h2>Delete a author</h2>
<label for="deleteAuthorId">Enter author id to delete:</label>
<input type="number" id="deleteAuthorId"><br>
<button onclick="deleteAuthor()">Delete</button>
<h2>Update a author</h2>
<label for="newAuthorId">Author id:</label>
<input type="number" id="newAuthorId"><br>
<label for="newAuthorName">Name:</label>
<input type="text" id="newAuthorName"><br>
<label for="newAuthorCountry">Country:</label>
<input type="text" id="newAuthorCountry"><br>    
<button onclick="updateAuthor()">Update</button>
<script>

        // Fetch books dynamically

        /* fetch('/api/books')

        .then(response => response.json())

        .then(data => {

            const list = document.getElementById('bookList');

            data.forEach(book => {

                const li = document.createElement('li');

                li.textContent = `${book.title} having price ${book.price} with author id ${book.authorId}`;

                list.appendChild(li);

            });

        })

        .catch(error => console.error('Error fetching books data', error)); */
 
        // Fetch book by id

         function fetchAuthorById() {

            const authorId = document.getElementById("authorId").value;

            if (!authorId) {

                alert("Please enter some author id");

                return;

            }

            fetch(`api/authors/${authorId}`)

            .then(response => {

                if (!response.ok) {

                    throw new Error("Author not found");

                }

                return response.text();

            })

            .then(book => {

                document.getElementById("authorDetails").textContent =

                    `Title: ${author.title} || Price: ${author.price} || Author ID: ${author.authorId}`;

            })

            .catch(error => {

                document.getElementById("authorDetails").textContent = "Author not found";

            });

        }

        // Submit books (dummy function for demonstration)

        function submitAuthors() {

            const newId = document.getElementById("newAuthorId").value;

            const newAuthorName = document.getElementById("newAuthorName").value;

            const newAuthorCountry = document.getElementById("newAuthorCountry").value;

 
            if (!newAuthorId || !newAuthorTitle || !newAuthorPrice || !newAuthorId) {

                alert("Please fill in all fields");

                return;

            }
 
            const newAuthor = {

                id: newAuthorId,

                title: newAuthorName,

                price: newAuthorCountry

            };
 
            fetch('/api/authors', {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json'

                },

                body: JSON.stringify(newAuthor)

            })

            .then(response => {

                if (!response.ok) {

                    throw new Error("Failed to add author");

                }

                return response.text();

            })

            .then(data => {

                alert("Author added successfully");

                // Optionally, update the book list dynamically

                const list = document.getElementById('authorList');

                const li = document.createElement('li');

                li.textContent = `Author Id: ${data.id}   Author Name: ${data.name}   Author Country:  ${data.country} `;

                list.appendChild(li);

            })

            .catch(error => {

                console.error('Error adding author:', error);

                alert("Error adding author");

            });

            fetch('/api/authors')

        	.then(response => response.json())
 
        	.then(data => {
 
        		const list = document.getElementById('authorList');
 
        		data.forEach(author => {
 
        			const li = document.createElement('li');
 
        			 li.textContent = `Author Id: ${data.id}   Author Name: ${data.name}   Author Country:  ${data.country} `;

                     list.appendChild(li);
 
        		})
 
        	})
 
        	.catch(error => console.error('Error fetching authors data', error));

        }

async function deleteAuthor() {

     const deleteAuthorId = document.getElementById('deleteAuthorId').value;

     if (!deleteAuthorId) {

         alert("Please enter a valid author ID to delete.");

         return;

     }
 
     try {

         const response = await fetch(`/api/authors/${deleteAuthorId}`, {

             method: "DELETE"

         });
 
         if (!response.ok) {

             throw new Error("Failed to delete author");

         }
 
         alert(`Author with ID ${deleteAuthorId} deleted successfully!`);    

     } catch (error) {

         console.error('Error deleting author:', error);

     }

}

function updateAuthor() {

     const updateAuthorId = document.getElementById("updateAuthorId").value;

     const updateAuthorName = document.getElementById("updateAuthorName").value;

     const updateAuthorCountry = document.getElementById("updateAuthorCountry").value;

 
     if (!updateAuthorId || !updateAuthorName || !updateAuthorCountry) {

         alert("Please fill in all fields");

         return;

     }
 
     const updatedAuthor = {

         title: updateAuthorTitle,

         price: updateAuthorPrice,

         authorId: updateAuthorId

     };
 
     fetch(`/api/authors/${updateAuthorId}`, {

         method: 'PUT',

         headers: {

             'Content-Type': 'application/json'

         },

         body: JSON.stringify(updatedAuthor)

     })

     .then(response => {

         if (!response.ok) {

             throw new Error("Failed to update author");

         }

         return response.text();

     })

     .then(data => {

         alert("Author updated successfully");

         fetchAuthors(); // Fetch and print all books after updating a book

     })

     .catch(error => {

         console.error('Error updating author:', error);

         alert("Error updating author");

     });

}

</script>
</body>
</html>
 